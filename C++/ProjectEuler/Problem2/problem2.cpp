// Project Euler Problem 2
/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
// ----------------------------------------------------------------------------------------------------------------------------------

#include<iostream>
using namespace std;

int fib(int);
int sum();

int main()
{
  cout << sum() << endl;
  return 0;
}

int fib(int n)
{
  if (n == 1)
    return 1;
  else if (n == 2)
    return 2;
  else {
    int temp1 = 1; 
    int temp2 = 2;
    int temp3;
    for (int i = 2; i < n; i++)
    {
      temp3 = temp1+temp2;
      temp1 = temp2;
      temp2 = temp3;
    }
    return temp2;
  }
}

int sum()
{
  int temp = 0, i = 1;
  do
  {
    int t = fib(i);
    if (t % 2 == 0)
    temp+= t;
    i++;
  } while(fib(i) < 4000000);
 
  return temp;
}
  
     
    
    
    